{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","components/Chart.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["devstyle","textAlign","Titles","react_default","a","createElement","style","divstyle","size","From","props","onSubmit","getWeather","type","name","placeholder","divStyle","width","fontsize","Weather","city","country","error","divStyleC","divStyleC2","height","Chart","className","chartDataTemp","es","data","chartDataHum","chartDataPerc","Table","forcasrData","dates","temps","hums","percs","API_KEY","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","App","state","temp","undefined","prec","humidity","_callee","e","days7","dd","api_call","i","j","dt","api_call2","Tchardatatemp","Tchardatahum","Tchardataperc","TforcastData","regenerator_default","wrap","_context","prev","next","preventDefault","_this","setState","target","elements","value","Array","setDate","fetch","concat","sent","json","console","log","Object","toConsumableArray","current","temp_c","location","precip_mm","last_updated","t0","t1","push","call","forecast","forecastday","avgtemp_c","totalprecip_mm","avghumidity","labels","datasets","label","backgroundColor","stop","components_Titles","Form","this","components_Weather","temperature","precipitation","components_Table","components_Chart","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f2b707c.chunk.js","sourcesContent":["import React from \"react\"\nconst devstyle ={\n    textAlign:'center'\n}\nconst Titles = () =>(\n    <div style={devstyle}>\n        <h1>Weather Forcast</h1>\n        <br/><br/>\n    </div>\n);\n\nexport default Titles","import React from \"react\"\nconst divstyle={\n    textAlign:'center',\n    size:'100%'\n\n}\nconst From = props => (\n    <form onSubmit={props.getWeather} style={divstyle}>\n        <input type=\"text\" name=\"city\" placeholder=\"Place..\"/>\n        <button>Get Weather</button>\n    </form>\n);\n\nexport default From","import React from \"react\"\nconst divStyle = {\n    width:'100%',\n    textAlign:'center',\n    fontsize:'200%'\n\n};\n\nconst Weather = props => (\n    <div style={divStyle}>\n        <br/><br/>\n        { props.city && props.country && <p><h2>Location : {props.city} , {props.country}</h2></p> }\n        { props.error && <p>{props.error}</p> }\n    </div>\n);\n\nexport default Weather","import React from 'react'\nimport { Bar } from 'react-chartjs-2'\nconst divStyleC = {\n    textAlign:'center'\n};\nconst divStyleC2 = {\n    width:'500px',\n    height:'400px',\n    textAlign:'center'\n\n};\nconst Chart = props =>(\n    <div className=\"chart\" style={divStyleC}>\n        <br/><br/>\n        { props.chartDataTemp && <h2>Last Seven Days Record</h2>}\n        <br/><br/>\n\n        <p>\n            <div style={divStyleC2}>\n                { props.chartDataTemp && <Bar data={props.chartDataTemp}/> }\n            </div>\n            <div style={divStyleC2}>\n                { props.chartDataHum && <Bar data={props.chartDataHum}/> }\n            </div>\n            <div style={divStyleC2}>\n                { props.chartDataPerc && <Bar data={props.chartDataPerc}/> }\n            </div>\n        </p>\n    </div>\n);\n\nexport default Chart;","import React from \"react\"\n\nconst divStyle = {\n    width:'100%',\n    textAlign:'center'\n};\n\nconst Table = props => (\n\n    <div>\n        {props.forcasrData &&\n        <table style={divStyle}>\n            <tr>\n                <th>Date</th>\n                <th>Temperature</th>\n                <th>Humidity</th>\n                <th>Precipitation</th>\n            </tr>\n            <tr>\n                <td><b>{props.forcasrData.dates[0]}</b></td>\n                <td><b>{props.forcasrData.temps[0]}</b></td>\n                <td><b>{props.forcasrData.hums[0]}</b></td>\n                <td><b>{props.forcasrData.percs[0]}</b></td>\n            </tr>\n            <tr>\n                <td>{props.forcasrData.dates[1]}</td>\n                <td>{props.forcasrData.temps[1]}</td>\n                <td>{props.forcasrData.hums[1]}</td>\n                <td>{props.forcasrData.percs[1]}</td>\n            </tr>\n            <tr>\n                <td>{props.forcasrData.dates[2]}</td>\n                <td>{props.forcasrData.temps[2]}</td>\n                <td>{props.forcasrData.hums[2]}</td>\n                <td>{props.forcasrData.percs[2]}</td>\n            </tr>\n            <tr>\n                <td>{props.forcasrData.dates[3]}</td>\n                <td>{props.forcasrData.temps[3]}</td>\n                <td>{props.forcasrData.hums[3]}</td>\n                <td>{props.forcasrData.percs[3]}</td>\n            </tr>\n\n        </table>}\n    </div>\n\n);\nexport default Table;","import React, { Component } from 'react'\nimport Titles from './components/Titles'\nimport From from  './components/Form'\nimport Wearher from './components/Weather'\nimport Chart from './components/Chart'\nimport Table from  './components/Table'\n\nconst API_KEY=\"8471d14a7f834e1595840614190104\";\n\nclass App extends Component {\n  state={\n    temp:[undefined],\n    city:undefined,\n    country:undefined,\n    prec:[undefined],\n    humidity:[undefined],\n    date:[undefined],\n    chartDataTemp:undefined,\n    chartDataHum:undefined,\n    chartDataPerc:undefined,\n    forcasrData:undefined,\n    error:undefined\n\n  };\n\n\n    getWeather = async (e) => {\n    e.preventDefault();\n    this.setState(\n        {\n          temp: [],\n          city: undefined,\n          country: undefined,\n          prec: [],\n          humidity: [],\n          date: [],\n          chartDataTemp: undefined,\n          chartDataHum: undefined,\n          chartDataPerc: undefined,\n          forcasrData: undefined,\n          error: undefined\n        }\n    );\n    const city=e.target.elements.city.value;\n    var days7 = new Array(0);\n    var dd=new Date();\n    dd.setDate(dd.getDate()-7);\n    if (city)\n    {\n      const api_call= await fetch(`https://api.apixu.com/v1/forecast.json?key=${API_KEY}&q=${city}&days=4`);\n      const data=await api_call.json();\n      console.log(data);\n      this.setState({\n        temp: [...this.state.temp, data.current.temp_c],\n        city: data.location.name,\n        country:data.location.country,\n        prec:[...this.state.prec, data.current.precip_mm],\n        humidity:[...this.state.humidity, data.current.humidity],\n        date: [...this.state.date, data.current.last_updated],\n        error: \"\"\n      });\n      var i;\n      var j=0;\n      for (i=7;i>0;i--) {\n        var dt = formatDate(dd);\n        var api_call2 = await fetch(`https://api.apixu.com/v1/history.json?key=${API_KEY}&q=${city}&dt=${dt}`);\n        days7.push(await api_call2.json());\n        dd.setDate(dd.getDate()+1);\n        if(days7[j].forecast.forecastday[0])\n        {\n          this.setState({\n            temp:[...this.state.temp, days7[j].forecast.forecastday[0].day.avgtemp_c],\n            prec:[...this.state.prec, days7[j].forecast.forecastday[0].day.totalprecip_mm],\n            humidity:[...this.state.humidity, days7[j].forecast.forecastday[0].day.avghumidity],\n            date:[...this.state.date, days7[j].forecast.forecastday[0].date],\n          });\n        }\n        else {\n          this.setState({\n            temp: [...this.state.temp, 0],\n            prec: [...this.state.prec,0],\n            humidity: [...this.state.humidity, 0],\n            date: [...this.state.date, 0],\n          });\n        }\n        j++;\n      }\n      var Tchardatatemp={\n        labels: [this.state.date[2], this.state.date[3], this.state.date[4], this.state.date[5], this.state.date[6], this.state.date[7], this.state.date[8]],\n        datasets: [\n          {\n            label: 'Temperature',\n            data: [this.state.temp[2], this.state.temp[3], this.state.temp[4], this.state.temp[5], this.state.temp[6], this.state.temp[7], this.state.temp[8]],\n            backgroundColor: [\n              'rgb(255, 0, 0)',\n              'rgb(255, 255, 0)',\n              'rgb(255, 0, 255)',\n              'rgb(0, 255, 0)',\n              'rgb(0, 0, 255)',\n              'rgb(255, 0, 0)',\n              'rgb(0, 0, 255)'\n            ]\n\n          }\n        ]\n      };\n\n      var Tchardatahum={\n        labels: [this.state.date[2], this.state.date[3], this.state.date[4], this.state.date[5], this.state.date[6], this.state.date[7], this.state.date[8]],\n        datasets: [\n          {\n            label: 'Humidity',\n            data: [this.state.humidity[2], this.state.humidity[3], this.state.humidity[4], this.state.humidity[5], this.state.humidity[6], this.state.humidity[7], this.state.humidity[8]],\n            backgroundColor: [\n              'rgb(255, 0, 0)',\n              'rgb(255, 255, 0)',\n              'rgb(255, 0, 255)',\n              'rgb(0, 255, 0)',\n              'rgb(0, 0, 255)',\n              'rgb(255, 0, 0)',\n              'rgb(0, 0, 255)'\n            ]\n\n          }\n        ]\n      };\n\n      var Tchardataperc={\n        labels: [this.state.date[2], this.state.date[3], this.state.date[4], this.state.date[5], this.state.date[6], this.state.date[7], this.state.date[8]],\n        datasets: [\n          {\n            label: 'Precipitation',\n            data: [this.state.prec[2], this.state.prec[3], this.state.prec[4], this.state.prec[5], this.state.prec[6], this.state.prec[7], this.state.prec[8]],\n            backgroundColor: [\n              'rgb(255, 191, 0)',\n              'rgb(128, 255, 0)',\n              'rgb(0, 255, 191)',\n              'rgb(0, 128, 255)',\n              'rgb(191, 0, 255)',\n              'rgb(255, 0, 128)',\n              'rgb(255, 0, 0)'\n            ]\n\n          }\n        ]\n      };\n\n      var TforcastData={\n        dates:[data.forecast.forecastday[0].date,data.forecast.forecastday[1].date,data.forecast.forecastday[2].date,data.forecast.forecastday[3].date],\n        temps:[data.forecast.forecastday[0].day.avgtemp_c,data.forecast.forecastday[1].day.avgtemp_c,data.forecast.forecastday[2].day.avgtemp_c,data.forecast.forecastday[3].day.avgtemp_c],\n        hums:[data.forecast.forecastday[0].day.avghumidity,data.forecast.forecastday[1].day.avghumidity,data.forecast.forecastday[2].day.avghumidity,data.forecast.forecastday[3].day.avghumidity],\n        percs:[data.forecast.forecastday[0].day.totalprecip_mm,data.forecast.forecastday[1].day.totalprecip_mm,data.forecast.forecastday[2].day.totalprecip_mm,data.forecast.forecastday[3].day.totalprecip_mm],\n      };\n\n      this.setState(\n          {\n            forcasrData:TforcastData,\n            chartDataTemp:Tchardatatemp,\n            chartDataHum:Tchardatahum,\n            chartDataPerc:Tchardataperc\n          }\n      )\n\n    }\n    else\n    {\n      this.setState({error: \"Please Enter Correct Details\"})\n    }\n\n  };\n\n  render() {\n    return (\n        <div>\n          <Titles/>\n          <From getWeather={this.getWeather}/>\n          <Wearher\n            temperature={this.state.temp}\n            city={this.state.city}\n            country={this.state.country}\n            precipitation={this.state.prec}\n            humidity={this.state.humidity}\n            error={this.state.error}\n          />\n          <Table forcasrData={this.state.forcasrData}/>\n          <Chart\n            chartDataTemp={this.state.chartDataTemp}\n            chartDataHum={this.state.chartDataHum}\n            chartDataPerc={this.state.chartDataPerc}\n          />\n        </div>\n    );\n  }\n\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}